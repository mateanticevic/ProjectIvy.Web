/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/Airport": {
    get: {
      parameters: {
        query: {
          Visited?: boolean;
          CityId?: string;
          Countryid?: string;
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["AirportPagedView"];
            "application/json": components["schemas"]["AirportPagedView"];
            "text/json": components["schemas"]["AirportPagedView"];
          };
        };
      };
    };
  };
  "/Airport/Count": {
    get: {
      parameters: {
        query: {
          Visited?: boolean;
          CityId?: string;
          Countryid?: string;
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Application/{valueId}/Settings": {
    get: {
      parameters: {
        path: {
          valueId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": { [key: string]: any };
            "application/json": { [key: string]: any };
            "text/json": { [key: string]: any };
          };
        };
      };
    };
  };
  "/Service/LastFm/Artist/Top": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Artist"][];
            "application/json": components["schemas"]["Artist"][];
            "text/json": components["schemas"]["Artist"][];
          };
        };
      };
    };
  };
  "/Beer": {
    get: {
      parameters: {
        query: {
          OrderAscending?: boolean;
          OrderBy?: components["schemas"]["BeerSort"];
          BrandId?: string;
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Beer/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Beer/Brand": {
    get: {
      parameters: {
        query: {
          HasCountry?: boolean;
          Search?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["BrandBinding"];
          "application/json": components["schemas"]["BrandBinding"];
          "text/json": components["schemas"]["BrandBinding"];
          "application/*+json": components["schemas"]["BrandBinding"];
        };
      };
    };
  };
  "/Beer/Brand/{brandId}/Beer": {
    post: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["BeerBinding"];
          "application/json": components["schemas"]["BeerBinding"];
          "text/json": components["schemas"]["BeerBinding"];
          "application/*+json": components["schemas"]["BeerBinding"];
        };
      };
    };
  };
  "/Beer/{beerId}": {
    put: {
      parameters: {
        path: {
          beerId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["BeerBinding"];
          "application/json": components["schemas"]["BeerBinding"];
          "text/json": components["schemas"]["BeerBinding"];
          "application/*+json": components["schemas"]["BeerBinding"];
        };
      };
    };
  };
  "/Beer/Brand/{brandId}": {
    put: {
      parameters: {
        path: {
          brandId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["BrandBinding"];
          "application/json": components["schemas"]["BrandBinding"];
          "text/json": components["schemas"]["BrandBinding"];
          "application/*+json": components["schemas"]["BrandBinding"];
        };
      };
    };
  };
  "/Call": {
    get: {
      parameters: {
        query: {
          Number?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["CallBinding"];
          "application/json": components["schemas"]["CallBinding"];
          "text/json": components["schemas"]["CallBinding"];
          "application/*+json": components["schemas"]["CallBinding"];
        };
      };
    };
  };
  "/Car": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Car"][];
            "application/json": components["schemas"]["Car"][];
            "text/json": components["schemas"]["Car"][];
          };
        };
      };
    };
  };
  "/Car/{carId}": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Car"];
            "application/json": components["schemas"]["Car"];
            "text/json": components["schemas"]["Car"];
          };
        };
      };
    };
  };
  "/Car/{carId}/Log/BySession": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
        query: {
          HasOdometer?: boolean;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CarLogBySession"][];
            "application/json": components["schemas"]["CarLogBySession"][];
            "text/json": components["schemas"]["CarLogBySession"][];
          };
        };
      };
    };
  };
  "/Car/{carId}/Log/Count": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Car/{carId}/Log/Latest": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
        query: {
          HasOdometer?: boolean;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CarLog"];
            "application/json": components["schemas"]["CarLog"];
            "text/json": components["schemas"]["CarLog"];
          };
        };
      };
    };
  };
  "/Car/{carId}/Log": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
        query: {
          HasOdometer?: boolean;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Car/{carId}/Log/Torque.php": {
    get: {
      parameters: {
        path: {
          carId: string;
        };
        query: {
          Time?: number;
          K11?: number;
          Kff1204?: number;
          Kff1207?: number;
          Kff1271?: number;
          Kff1220?: number;
          Kff1221?: number;
          Kff1222?: number;
          Kff1223?: number;
          Kfe1805?: number;
          K10?: number;
          K23?: number;
          K33?: number;
          K4?: number;
          K46?: number;
          K2F?: number;
          K5?: number;
          K78?: number;
          Kb?: number;
          Kc?: number;
          Kd?: number;
          Kf?: number;
          Session?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
  };
  "/Car/{id}/Log": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["CarLogBinding"];
          "application/json": components["schemas"]["CarLogBinding"];
          "text/json": components["schemas"]["CarLogBinding"];
          "application/*+json": components["schemas"]["CarLogBinding"];
        };
      };
    };
  };
  "/Car/{id}/Service": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["CarServiceBinding"];
          "application/json": components["schemas"]["CarServiceBinding"];
          "text/json": components["schemas"]["CarServiceBinding"];
          "application/*+json": components["schemas"]["CarServiceBinding"];
        };
      };
    };
  };
  "/Car/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["CarBinding"];
          "application/json": components["schemas"]["CarBinding"];
          "text/json": components["schemas"]["CarBinding"];
          "application/*+json": components["schemas"]["CarBinding"];
        };
      };
    };
  };
  "/Card": {
    get: {
      parameters: {
        query: {
          IsActive?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/CarModel/{carModelId}/ServiceInterval": {
    get: {
      parameters: {
        path: {
          carModelId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CarServiceInterval"][];
            "application/json": components["schemas"]["CarServiceInterval"][];
            "text/json": components["schemas"]["CarServiceInterval"][];
          };
        };
      };
    };
  };
  "/CarModel/{carModelId}/ServiceType": {
    get: {
      parameters: {
        path: {
          carModelId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CarServiceType"][];
            "application/json": components["schemas"]["CarServiceType"][];
            "text/json": components["schemas"]["CarServiceType"][];
          };
        };
      };
    };
  };
  "/City": {
    get: {
      parameters: {
        query: {
          CountryId?: string;
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/City/Visited": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["City"][];
            "application/json": components["schemas"]["City"][];
            "text/json": components["schemas"]["City"][];
          };
        };
      };
    };
  };
  "/Common/Airline": {
    get: {
      parameters: {
        query: {
          Search?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Common/Currency": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Currency"][];
            "application/json": components["schemas"]["Currency"][];
            "text/json": components["schemas"]["Currency"][];
          };
        };
      };
    };
  };
  "/Common/BeerServing": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Common/BeerStyle": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Common/ExpenseFileType": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExpenseFileType"][];
            "application/json": components["schemas"]["ExpenseFileType"][];
            "text/json": components["schemas"]["ExpenseFileType"][];
          };
        };
      };
    };
  };
  "/Common/PaymentType": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Common/PoiCategory": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PoiCategory"][];
            "application/json": components["schemas"]["PoiCategory"][];
            "text/json": components["schemas"]["PoiCategory"][];
          };
        };
      };
    };
  };
  "/Common/IncomeType": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Average/ByYear": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ConsumationPagedView"];
            "application/json": components["schemas"]["ConsumationPagedView"];
            "text/json": components["schemas"]["ConsumationPagedView"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["ConsumationBinding"];
          "application/json": components["schemas"]["ConsumationBinding"];
          "text/json": components["schemas"]["ConsumationBinding"];
          "application/*+json": components["schemas"]["ConsumationBinding"];
        };
      };
    };
  };
  "/Consumation/Beer": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Beer/New": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Brand": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Consecutive/Days": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Count": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Count/ByBeer": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Count/ByMonth": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringInt32KeyValuePair"][];
            "application/json": components["schemas"]["StringInt32KeyValuePair"][];
            "text/json": components["schemas"]["StringInt32KeyValuePair"][];
          };
        };
      };
    };
  };
  "/Consumation/Count/ByMonthOfYear": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringInt32KeyValuePair"][];
            "application/json": components["schemas"]["StringInt32KeyValuePair"][];
            "text/json": components["schemas"]["StringInt32KeyValuePair"][];
          };
        };
      };
    };
  };
  "/Consumation/Count/ByYear": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Count/Beer": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Beer/Count": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Count/Brand": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Brand/Count": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Country": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Country/Boundaries": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Consumation/Sum/ByBeer": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByCountry": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByDayOfWeek": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByMonth": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByMonthOfYear": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByYear": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByServing": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Consumation/Sum/ByStyle": {
    get: {
      parameters: {
        query: {
          BeerId?: string;
          BrandId?: string;
          CountryId?: string;
          Serving?: components["schemas"]["BeerServing"];
          StyleId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Country": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CountryPagedView"];
            "application/json": components["schemas"]["CountryPagedView"];
            "text/json": components["schemas"]["CountryPagedView"];
          };
        };
      };
    };
  };
  "/Country/Count": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Country/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Country"];
            "application/json": components["schemas"]["Country"];
            "text/json": components["schemas"]["Country"];
          };
        };
      };
    };
  };
  "/Country/Visited": {
    get: {
      parameters: {
        query: {
          CityId?: string[];
          CountryId?: string[];
          OrderBy?: components["schemas"]["TripSort"];
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Country"][];
            "application/json": components["schemas"]["Country"][];
            "text/json": components["schemas"]["Country"][];
          };
        };
      };
    };
  };
  "/Country/Visited/Count": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Country/Visited/Boundaries": {
    get: {
      parameters: {
        query: {
          CityId?: string[];
          CountryId?: string[];
          OrderBy?: components["schemas"]["TripSort"];
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["CountryBoundaries"][];
            "application/json": components["schemas"]["CountryBoundaries"][];
            "text/json": components["schemas"]["CountryBoundaries"][];
          };
        };
      };
    };
  };
  "/Country/List": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Country/List/Visited": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Currency": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Currency"][];
            "application/json": components["schemas"]["Currency"][];
            "text/json": components["schemas"]["Currency"][];
          };
        };
      };
    };
  };
  "/Device/{deviceId}/browserLog": {
    put: {
      parameters: {
        path: {
          deviceId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["BrowserLogBinding"];
          "application/json": components["schemas"]["BrowserLogBinding"];
          "text/json": components["schemas"]["BrowserLogBinding"];
          "application/*+json": components["schemas"]["BrowserLogBinding"];
        };
      };
    };
  };
  "/Expense/{valueId}": {
    delete: {
      parameters: {
        path: {
          valueId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
      };
    };
  };
  "/Expense/{expenseId}": {
    get: {
      parameters: {
        path: {
          expenseId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Expense"];
            "application/json": components["schemas"]["Expense"];
            "text/json": components["schemas"]["Expense"];
          };
        };
      };
    };
  };
  "/Expense": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExpensePagedView"];
            "application/json": components["schemas"]["ExpensePagedView"];
            "text/json": components["schemas"]["ExpensePagedView"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["ExpenseBinding"];
          "application/json": components["schemas"]["ExpenseBinding"];
          "text/json": components["schemas"]["ExpenseBinding"];
          "application/*+json": components["schemas"]["ExpenseBinding"];
        };
      };
    };
  };
  "/Expense/Count": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Expense/Count/ByDay": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringInt32KeyValuePair"][];
            "application/json": components["schemas"]["StringInt32KeyValuePair"][];
            "text/json": components["schemas"]["StringInt32KeyValuePair"][];
          };
        };
      };
    };
  };
  "/Expense/Count/ByDayOfWeek": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Count/ByMonth": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Count/ByMonthOfYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringInt32KeyValuePair"][];
            "application/json": components["schemas"]["StringInt32KeyValuePair"][];
            "text/json": components["schemas"]["StringInt32KeyValuePair"][];
          };
        };
      };
    };
  };
  "/Expense/Count/ByYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Count/ByType": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Count/ByVendor": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/{expenseId}/File": {
    get: {
      parameters: {
        path: {
          expenseId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExpenseFile"][];
            "application/json": components["schemas"]["ExpenseFile"][];
            "text/json": components["schemas"]["ExpenseFile"][];
          };
        };
      };
    };
  };
  "/Expense/Sum": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByCurrency": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByDayOfWeek": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByMonthOfYear": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByYear": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByMonth": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Sum/ByType": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["StringDecimalKeyValuePair"][];
            "application/json": components["schemas"]["StringDecimalKeyValuePair"][];
            "text/json": components["schemas"]["StringDecimalKeyValuePair"][];
          };
        };
      };
    };
  };
  "/Expense/Type/Count": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Expense/Top/Description": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Expense/Vendor/Count": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          Month?: number[];
          OrderBy?: components["schemas"]["ExpenseSort"];
          HasLinkedFiles?: boolean;
          HasPoi?: boolean;
          NeedsReview?: boolean;
          AmountFrom?: number;
          AmountTo?: number;
          CardId?: string[];
          CurrencyId?: string[];
          Description?: string;
          PaymentTypeId?: string[];
          TypeId?: string[];
          VendorId?: string[];
          ExcludeId?: string[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Expense/{id}": {
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["ExpenseBinding"];
          "application/json": components["schemas"]["ExpenseBinding"];
          "text/json": components["schemas"]["ExpenseBinding"];
          "application/*+json": components["schemas"]["ExpenseBinding"];
        };
      };
    };
  };
  "/Expense/{expenseId}/File/{fileId}": {
    post: {
      parameters: {
        path: {
          expenseId: string;
          fileId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["ExpenseFileBinding"];
          "application/json": components["schemas"]["ExpenseFileBinding"];
          "text/json": components["schemas"]["ExpenseFileBinding"];
          "application/*+json": components["schemas"]["ExpenseFileBinding"];
        };
      };
    };
  };
  "/ExpenseType": {
    get: {
      parameters: {
        query: {
          HasChildren?: boolean;
          HasParent?: boolean;
          ParentId?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExpenseType"][];
            "application/json": components["schemas"]["ExpenseType"][];
            "text/json": components["schemas"]["ExpenseType"][];
          };
        };
      };
    };
  };
  "/ExpenseType/Tree": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["ExpenseTypeNode"][];
            "application/json": components["schemas"]["ExpenseTypeNode"][];
            "text/json": components["schemas"]["ExpenseTypeNode"][];
          };
        };
      };
    };
  };
  "/File/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/File": {
    post: {
      parameters: {
        query: {
          imageResize?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Flight/Count": {
    get: {
      parameters: {
        query: {
          DestinationId?: string;
          OriginId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Flight/Count/ByAirport": {
    get: {
      parameters: {
        query: {
          DestinationId?: string;
          OriginId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Flight/Count/ByYear": {
    get: {
      parameters: {
        query: {
          DestinationId?: string;
          OriginId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Flight": {
    get: {
      parameters: {
        query: {
          DestinationId?: string;
          OriginId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["FlightBinding"];
          "application/json": components["schemas"]["FlightBinding"];
          "text/json": components["schemas"]["FlightBinding"];
          "application/*+json": components["schemas"]["FlightBinding"];
        };
      };
    };
  };
  "/Geohash": {
    get: {
      parameters: {
        query: {
          Geohash?: string;
          Precision?: number;
          All?: boolean;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": string[];
            "application/json": string[];
            "text/json": string[];
          };
        };
      };
    };
  };
  "/Income": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          OrderBy?: components["schemas"]["IncomeSort"];
          CurrencyId?: string;
          SourceId?: string;
          TypeId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["IncomePagedView"];
            "application/json": components["schemas"]["IncomePagedView"];
            "text/json": components["schemas"]["IncomePagedView"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["IncomeBinding"];
          "application/json": components["schemas"]["IncomeBinding"];
          "text/json": components["schemas"]["IncomeBinding"];
          "application/*+json": components["schemas"]["IncomeBinding"];
        };
      };
    };
  };
  "/Income/Count": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Income/Source": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Income/Sum": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          OrderBy?: components["schemas"]["IncomeSort"];
          CurrencyId?: string;
          SourceId?: string;
          TypeId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Income/Sum/ByMonth": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          OrderBy?: components["schemas"]["IncomeSort"];
          CurrencyId?: string;
          SourceId?: string;
          TypeId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["DecimalGroupedByMonth"][];
            "application/json": components["schemas"]["DecimalGroupedByMonth"][];
            "text/json": components["schemas"]["DecimalGroupedByMonth"][];
          };
        };
      };
    };
  };
  "/Income/Sum/ByYear": {
    get: {
      parameters: {
        query: {
          TargetCurrencyId?: string;
          Day?: components["schemas"]["DayOfWeek"][];
          OrderBy?: components["schemas"]["IncomeSort"];
          CurrencyId?: string;
          SourceId?: string;
          TypeId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Log/Browser": {
    get: {
      parameters: {
        query: {
          DeviceId?: string;
          DomainId?: string;
          IsSecured?: boolean;
          WebId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["BrowserLogPagedView"];
            "application/json": components["schemas"]["BrowserLogPagedView"];
            "text/json": components["schemas"]["BrowserLogPagedView"];
          };
        };
      };
    };
  };
  "/Movie": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["MoviePagedView"];
            "application/json": components["schemas"]["MoviePagedView"];
            "text/json": components["schemas"]["MoviePagedView"];
          };
        };
      };
    };
  };
  "/Movie/{imdbId}": {
    get: {
      parameters: {
        path: {
          imdbId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Movie"];
            "application/json": components["schemas"]["Movie"];
            "text/json": components["schemas"]["Movie"];
          };
        };
      };
    };
  };
  "/Movie/Count": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Movie/Count/ByDay": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByDayOfWeek": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByMonth": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByMovieDecade": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByMovieYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByMyRating": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByMonthOfYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByRuntime": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Count/ByYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/MyRating/Average": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Movie/MyRating/ByYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Rating/Average": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Movie/Rating/ByYear": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Movie/Runtime/Average": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Movie/Runtime/Sum": {
    get: {
      parameters: {
        query: {
          Day?: components["schemas"]["DayOfWeek"][];
          RatingHigher?: number;
          RatingLower?: number;
          RuntimeLonger?: number;
          RuntimeShorter?: number;
          OrderBy?: components["schemas"]["MovieSort"];
          Title?: string;
          MyRating?: number[];
          Year?: number[];
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Number/{number}/IsBlacklisted": {
    get: {
      parameters: {
        path: {
          number: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/PaymentProvider/transferWise/Notify": {
    post: {
      parameters: {
        query: {
          authorizationCode?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["TransferWiseTransferEvent"];
          "application/json": components["schemas"]["TransferWiseTransferEvent"];
          "text/json": components["schemas"]["TransferWiseTransferEvent"];
          "application/*+json": components["schemas"]["TransferWiseTransferEvent"];
        };
      };
    };
  };
  "/Poi": {
    get: {
      parameters: {
        query: {
          CategoryId?: string;
          Name?: string;
          VendorId?: string;
          "X.Lat"?: number;
          "X.Lng"?: number;
          "Y.Lat"?: number;
          "Y.Lng"?: number;
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["PoiPagedView"];
            "application/json": components["schemas"]["PoiPagedView"];
            "text/json": components["schemas"]["PoiPagedView"];
          };
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["PoiBinding"];
          "application/json": components["schemas"]["PoiBinding"];
          "text/json": components["schemas"]["PoiBinding"];
          "application/*+json": components["schemas"]["PoiBinding"];
        };
      };
    };
  };
  "/Ride": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["RideBinding"];
          "application/json": components["schemas"]["RideBinding"];
          "text/json": components["schemas"]["RideBinding"];
          "application/*+json": components["schemas"]["RideBinding"];
        };
      };
    };
  };
  "/ToDo": {
    get: {
      parameters: {
        query: {
          IsDone?: boolean;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": string;
          "application/json": string;
          "text/json": string;
          "application/*+json": string;
        };
      };
    };
  };
  "/ToDo/{id}/Done": {
    post: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Token": {
    post: {
      parameters: {
        query: {
          username?: string;
          password?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Service/LastFm/Track": {
    get: {
      parameters: {
        query: {
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Track"][];
            "application/json": components["schemas"]["Track"][];
            "text/json": components["schemas"]["Track"][];
          };
        };
      };
    };
  };
  "/Service/LastFm/Track/Count": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Service/LastFm/Track/Loved": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Track"][];
            "application/json": components["schemas"]["Track"][];
            "text/json": components["schemas"]["Track"][];
          };
        };
      };
    };
  };
  "/Service/LastFm/Track/Top": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Track"][];
            "application/json": components["schemas"]["Track"][];
            "text/json": components["schemas"]["Track"][];
          };
        };
      };
    };
  };
  "/Tracking": {
    get: {
      parameters: {
        query: {
          "BottomRight.Lat"?: number;
          "BottomRight.Lng"?: number;
          "TopLeft.Lat"?: number;
          "TopLeft.Lng"?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tracking"][];
            "application/json": components["schemas"]["Tracking"][];
            "text/json": components["schemas"]["Tracking"][];
          };
        };
      };
    };
    put: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["TrackingBinding"];
          "application/json": components["schemas"]["TrackingBinding"];
          "text/json": components["schemas"]["TrackingBinding"];
          "application/*+json": components["schemas"]["TrackingBinding"];
        };
      };
    };
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["TrackingBinding"][];
          "application/json": components["schemas"]["TrackingBinding"][];
          "text/json": components["schemas"]["TrackingBinding"][];
          "application/*+json": components["schemas"]["TrackingBinding"][];
        };
      };
    };
  };
  "/Tracking/Gpx": {
    get: {
      parameters: {
        query: {
          "BottomRight.Lat"?: number;
          "BottomRight.Lng"?: number;
          "TopLeft.Lat"?: number;
          "TopLeft.Lng"?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": string;
            "application/json": string;
            "text/json": string;
          };
        };
      };
    };
  };
  "/Tracking/Count": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Tracking/Count/ByMonth": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Int32GroupedByMonth"][];
            "application/json": components["schemas"]["Int32GroupedByMonth"][];
            "text/json": components["schemas"]["Int32GroupedByMonth"][];
          };
        };
      };
    };
  };
  "/Tracking/Count/ByYear": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Tracking/Count/Unique": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Tracking/Day": {
    get: {
      parameters: {
        query: {
          "BottomRight.Lat"?: number;
          "BottomRight.Lng"?: number;
          "TopLeft.Lat"?: number;
          "TopLeft.Lng"?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Tracking/Distance": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Tracking/Last": {
    get: {
      parameters: {
        query: {
          at?: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Tracking"];
            "application/json": components["schemas"]["Tracking"];
            "text/json": components["schemas"]["Tracking"];
          };
        };
      };
    };
  };
  "/Tracking/LastLocation": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Tracking/Speed/Average": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Tracking/Speed/Max": {
    get: {
      parameters: {
        query: {
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Tracking/Kml": {
    put: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": boolean;
            "application/json": boolean;
            "text/json": boolean;
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": string;
          "application/json": string;
          "text/json": string;
          "application/*+json": string;
        };
      };
    };
  };
  "/Trip/{tripId}": {
    get: {
      parameters: {
        path: {
          tripId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Trip"];
            "application/json": components["schemas"]["Trip"];
            "text/json": components["schemas"]["Trip"];
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          tripId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Trip/{tripId}/City/{cityId}": {
    post: {
      parameters: {
        path: {
          tripId: string;
          cityId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          tripId: string;
          cityId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Trip/{tripId}/Expense/{expenseId}": {
    post: {
      parameters: {
        path: {
          tripId: string;
          expenseId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          tripId: string;
          expenseId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Trip/{tripId}/Poi/{poiId}": {
    post: {
      parameters: {
        path: {
          tripId: string;
          poiId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
    delete: {
      parameters: {
        path: {
          tripId: string;
          poiId: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Trip": {
    get: {
      parameters: {
        query: {
          CityId?: string[];
          CountryId?: string[];
          OrderBy?: components["schemas"]["TripSort"];
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["TripPagedView"];
            "application/json": components["schemas"]["TripPagedView"];
            "text/json": components["schemas"]["TripPagedView"];
          };
        };
      };
    };
    post: {
      parameters: {
        query: {
          tripId?: string;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["TripBinding"];
          "application/json": components["schemas"]["TripBinding"];
          "text/json": components["schemas"]["TripBinding"];
          "application/*+json": components["schemas"]["TripBinding"];
        };
      };
    };
  };
  "/User/Session/{id}": {
    delete: {
      parameters: {
        query: {
          id?: number;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/User": {
    get: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["User"];
            "application/json": components["schemas"]["User"];
            "text/json": components["schemas"]["User"];
          };
        };
      };
    };
  };
  "/User/Session": {
    get: {
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/User/Password": {
    post: {
      responses: {
        /** Success */
        200: unknown;
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["PasswordSetBinding"];
          "application/json": components["schemas"]["PasswordSetBinding"];
          "text/json": components["schemas"]["PasswordSetBinding"];
          "application/*+json": components["schemas"]["PasswordSetBinding"];
        };
      };
    };
  };
  "/Vendor/{id}": {
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Vendor"];
            "application/json": components["schemas"]["Vendor"];
            "text/json": components["schemas"]["Vendor"];
          };
        };
      };
    };
  };
  "/Vendor": {
    get: {
      parameters: {
        query: {
          Search?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["VendorPagedView"];
            "application/json": components["schemas"]["VendorPagedView"];
            "text/json": components["schemas"]["VendorPagedView"];
          };
        };
      };
    };
  };
  "/Vendor/{vendorId}/Poi": {
    get: {
      parameters: {
        path: {
          vendorId: string;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": { [key: string]: unknown }[];
            "application/json": { [key: string]: unknown }[];
            "text/json": { [key: string]: unknown }[];
          };
        };
      };
    };
  };
  "/Web/Time/Sum": {
    get: {
      parameters: {
        query: {
          DeviceId?: string;
          PageAll?: boolean;
          Page?: number;
          PageSize?: number;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["WebTime"][];
            "application/json": components["schemas"]["WebTime"][];
            "text/json": components["schemas"]["WebTime"][];
          };
        };
      };
    };
  };
  "/Web/Time/Total": {
    get: {
      parameters: {
        query: {
          DomainId?: string;
          DeviceId?: string;
          IsSecured?: boolean;
          WebId?: string;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": number;
            "application/json": number;
            "text/json": number;
          };
        };
      };
    };
  };
  "/Web/Time/Total/ByDay": {
    get: {
      parameters: {
        query: {
          DomainId?: string;
          DeviceId?: string;
          IsSecured?: boolean;
          WebId?: string;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["TimeByDay"][];
            "application/json": components["schemas"]["TimeByDay"][];
            "text/json": components["schemas"]["TimeByDay"][];
          };
        };
      };
    };
  };
  "/Web/Time/Total/ByMonth": {
    get: {
      parameters: {
        query: {
          DomainId?: string;
          DeviceId?: string;
          IsSecured?: boolean;
          WebId?: string;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["Int32GroupedByMonth"][];
            "application/json": components["schemas"]["Int32GroupedByMonth"][];
            "text/json": components["schemas"]["Int32GroupedByMonth"][];
          };
        };
      };
    };
  };
  "/Web/Time/Total/ByYear": {
    get: {
      parameters: {
        query: {
          DomainId?: string;
          DeviceId?: string;
          IsSecured?: boolean;
          WebId?: string;
          From?: string;
          To?: string;
          OrderAscending?: boolean;
        };
      };
      responses: {
        /** Success */
        200: unknown;
      };
    };
  };
  "/Webhook/Dialogflow": {
    post: {
      responses: {
        /** Success */
        200: {
          content: {
            "text/plain": components["schemas"]["GoogleCloudDialogflowV2WebhookResponse"];
            "application/json": components["schemas"]["GoogleCloudDialogflowV2WebhookResponse"];
            "text/json": components["schemas"]["GoogleCloudDialogflowV2WebhookResponse"];
          };
        };
      };
      requestBody: {
        content: {
          "application/json-patch+json": components["schemas"]["GoogleCloudDialogflowV2WebhookRequest"];
          "application/json": components["schemas"]["GoogleCloudDialogflowV2WebhookRequest"];
          "text/json": components["schemas"]["GoogleCloudDialogflowV2WebhookRequest"];
          "application/*+json": components["schemas"]["GoogleCloudDialogflowV2WebhookRequest"];
        };
      };
    };
  };
}

export interface components {
  schemas: {
    Airport: {
      poi?: components["schemas"]["Poi"];
      iata?: string | null;
      name?: string | null;
    };
    AirportPagedView: {
      count?: number;
      items?: components["schemas"]["Airport"][] | null;
    };
    Artist: {
      name?: string | null;
      playCount?: number;
      rank?: number;
      url?: string | null;
    };
    Beer: {
      id?: string | null;
      name?: string | null;
      abv?: number;
      style?: components["schemas"]["BeerStyle"];
    };
    BeerBinding: {
      abv?: number;
      brandId?: string | null;
      name?: string | null;
      styleId?: string | null;
    };
    BeerServing: "OnTap" | "Bottle" | "Can" | "Plastic";
    BeerSort: "Abv" | "Name";
    BeerStyle: {
      id?: string | null;
      name?: string | null;
    };
    BrandBinding: {
      countryId?: string | null;
      name?: string | null;
    };
    BrowserLog: {
      domain?: components["schemas"]["Domain"];
      end?: string;
      start?: string;
      web?: components["schemas"]["Web"];
    };
    BrowserLogBinding: {
      isSecured?: boolean;
      end?: string;
      start?: string;
      deviceId?: string | null;
      domain?: string | null;
    };
    BrowserLogPagedView: {
      count?: number;
      items?: components["schemas"]["BrowserLog"][] | null;
    };
    CallBinding: {
      number?: string | null;
      timestamp?: string;
      fileId?: string | null;
      duration?: number;
    };
    Car: {
      id?: string | null;
      model?: components["schemas"]["CarModel"];
      productionYear?: number;
      services?: components["schemas"]["CarService"][] | null;
      serviceDue?: components["schemas"]["CarServiceDue"][] | null;
    };
    CarBinding: {
      model?: string | null;
      manufacturerId?: string | null;
      valueId?: string | null;
      productionYear?: number;
    };
    Card: {
      id?: string | null;
      name?: string | null;
      expires?: string;
      issued?: string;
      lastFourDigits?: string | null;
    };
    CarLog: {
      odometer?: number | null;
      timestamp?: string;
    };
    CarLogBinding: {
      carValueId?: string | null;
      odometer?: number;
    };
    CarLogBySession: {
      end?: string;
      start?: string;
      distance?: number | null;
      count?: number;
      fuelUsed?: number | null;
      maxEngineRpm?: number | null;
      maxSpeed?: number | null;
      session?: string | null;
    };
    CarModel: {
      engineDisplacement?: number;
      modelYear?: number;
      id?: string | null;
      name?: string | null;
      power?: number;
      manufacturer?: components["schemas"]["Manufacturer"];
    };
    CarService: {
      id?: string | null;
      serviceType?: components["schemas"]["CarServiceType"];
      date?: string;
      description?: string | null;
    };
    CarServiceBinding: {
      date?: string;
      description?: string | null;
      typeId?: string | null;
    };
    CarServiceDue: {
      dueAt?: number | null;
      dueIn?: number | null;
      dueBefore?: string | null;
      dueBeforeApprox?: string | null;
      serviceType?: components["schemas"]["CarServiceType"];
    };
    CarServiceInterval: {
      days?: number | null;
      range?: number | null;
      serviceType?: components["schemas"]["CarServiceType"];
    };
    CarServiceType: {
      id?: string | null;
      name?: string | null;
    };
    City: {
      id?: string | null;
      name?: string | null;
      country?: components["schemas"]["Country"];
    };
    Consumation: {
      beer?: components["schemas"]["Beer"];
      date?: string;
      volume?: number;
      serving?: components["schemas"]["BeerServing"];
    };
    ConsumationBinding: {
      beerId?: string | null;
      servingId?: string | null;
      date?: string;
      units?: number;
      volume?: number;
    };
    ConsumationPagedView: {
      count?: number;
      items?: components["schemas"]["Consumation"][] | null;
    };
    Country: {
      id?: string | null;
      name?: string | null;
    };
    CountryBoundaries: {
      country?: components["schemas"]["Country"];
      polygons?: components["schemas"]["Location"][][] | null;
    };
    CountryPagedView: {
      count?: number;
      items?: components["schemas"]["Country"][] | null;
    };
    Currency: {
      id?: string | null;
      code?: string | null;
      name?: string | null;
      symbol?: string | null;
    };
    DayOfWeek:
      | "Sunday"
      | "Monday"
      | "Tuesday"
      | "Wednesday"
      | "Thursday"
      | "Friday"
      | "Saturday";
    DecimalGroupedByMonth: {
      data?: number;
      month?: number;
      year?: number;
    };
    Domain: {
      id?: string | null;
    };
    Expense: {
      amount?: number;
      parentCurrencyExchangeRate?: number | null;
      comment?: string | null;
      card?: components["schemas"]["Card"];
      currency?: components["schemas"]["Currency"];
      files?: components["schemas"]["ExpenseFile"][] | null;
      parentCurrency?: components["schemas"]["Currency"];
      date?: string;
      modified?: string | null;
      timestamp?: string | null;
      expenseType?: components["schemas"]["ExpenseType"];
      poi?: components["schemas"]["Poi"];
      id?: string | null;
      installmentRef?: string | null;
      needsReview?: boolean;
      paymentType?: components["schemas"]["PaymentType"];
      vendor?: components["schemas"]["Vendor"];
    };
    ExpenseBinding: {
      amount?: number;
      parentCurrencyExchangeRate?: number | null;
      comment?: string | null;
      currencyId?: string | null;
      date?: string;
      expenseTypeId?: string | null;
      needsReview?: boolean;
      paymentTypeId?: string | null;
      parentCurrencyId?: string | null;
      cardId?: string | null;
      poiId?: string | null;
      id?: string | null;
      installmentRef?: string | null;
      vendorId?: string | null;
      vendorName?: string | null;
    };
    ExpenseFile: {
      name?: string | null;
      file?: components["schemas"]["File"];
      type?: components["schemas"]["ExpenseFileType"];
    };
    ExpenseFileBinding: {
      name?: string | null;
      typeId?: string | null;
    };
    ExpenseFileType: {
      id?: string | null;
      name?: string | null;
    };
    ExpensePagedView: {
      count?: number;
      items?: components["schemas"]["Expense"][] | null;
    };
    ExpenseSort: "Date" | "Created" | "Modified" | "Amount";
    ExpenseType: {
      id?: string | null;
      name?: string | null;
    };
    ExpenseTypeNode: {
      this?: components["schemas"]["ExpenseType"];
      children?: components["schemas"]["ExpenseTypeNode"][] | null;
    };
    File: {
      id?: string | null;
      size?: number;
      created?: string;
      type?: components["schemas"]["FileType"];
    };
    FileType: {
      id?: string | null;
      name?: string | null;
      mimeType?: string | null;
    };
    FlightBinding: {
      airlineId?: string | null;
      destinationId?: string | null;
      flightNumber?: string | null;
      originId?: string | null;
      arrival?: string;
      departure?: string;
    };
    GoogleCloudDialogflowV2Context: {
      lifespanCount?: number | null;
      name?: string | null;
      parameters?: { [key: string]: any } | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2EntityTypeEntity: {
      synonyms?: string[] | null;
      value?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2EventInput: {
      languageCode?: string | null;
      name?: string | null;
      parameters?: { [key: string]: any } | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2Intent: {
      action?: string | null;
      defaultResponsePlatforms?: string[] | null;
      displayName?: string | null;
      endInteraction?: boolean | null;
      events?: string[] | null;
      followupIntentInfo?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentFollowupIntentInfo"][]
        | null;
      inputContextNames?: string[] | null;
      isFallback?: boolean | null;
      liveAgentHandoff?: boolean | null;
      messages?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessage"][]
        | null;
      mlDisabled?: boolean | null;
      name?: string | null;
      outputContexts?:
        | components["schemas"]["GoogleCloudDialogflowV2Context"][]
        | null;
      parameters?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentParameter"][]
        | null;
      parentFollowupIntentName?: string | null;
      priority?: number | null;
      resetContexts?: boolean | null;
      rootFollowupIntentName?: string | null;
      trainingPhrases?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentTrainingPhrase"][]
        | null;
      webhookState?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentFollowupIntentInfo: {
      followupIntentName?: string | null;
      parentFollowupIntentName?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessage: {
      basicCard?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageBasicCard"];
      browseCarouselCard?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"];
      card?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageCard"];
      carouselSelect?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageCarouselSelect"];
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      linkOutSuggestion?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"];
      listSelect?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageListSelect"];
      mediaContent?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageMediaContent"];
      payload?: { [key: string]: any } | null;
      platform?: string | null;
      quickReplies?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageQuickReplies"];
      simpleResponses?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageSimpleResponses"];
      suggestions?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageSuggestions"];
      tableCard?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageTableCard"];
      text?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageText"];
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBasicCard: {
      buttons?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageBasicCardButton"][]
        | null;
      formattedText?: string | null;
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      subtitle?: string | null;
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBasicCardButton: {
      openUriAction?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"];
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction: {
      uri?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard: {
      imageDisplayOptions?: string | null;
      items?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"][]
        | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem: {
      description?: string | null;
      footer?: string | null;
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      openUriAction?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"];
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction: {
      url?: string | null;
      urlTypeHint?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageCard: {
      buttons?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageCardButton"][]
        | null;
      imageUri?: string | null;
      subtitle?: string | null;
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageCardButton: {
      postback?: string | null;
      text?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageCarouselSelect: {
      items?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"][]
        | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageCarouselSelectItem: {
      description?: string | null;
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      info?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageSelectItemInfo"];
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageColumnProperties: {
      header?: string | null;
      horizontalAlignment?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageImage: {
      accessibilityText?: string | null;
      imageUri?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion: {
      destinationName?: string | null;
      uri?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageListSelect: {
      items?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageListSelectItem"][]
        | null;
      subtitle?: string | null;
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageListSelectItem: {
      description?: string | null;
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      info?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageSelectItemInfo"];
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageMediaContent: {
      mediaObjects?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"][]
        | null;
      mediaType?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject: {
      contentUrl?: string | null;
      description?: string | null;
      icon?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      largeImage?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      name?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageQuickReplies: {
      quickReplies?: string[] | null;
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageSelectItemInfo: {
      key?: string | null;
      synonyms?: string[] | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageSimpleResponse: {
      displayText?: string | null;
      ssml?: string | null;
      textToSpeech?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageSimpleResponses: {
      simpleResponses?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageSimpleResponse"][]
        | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageSuggestion: {
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageSuggestions: {
      suggestions?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageSuggestion"][]
        | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageTableCard: {
      buttons?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageBasicCardButton"][]
        | null;
      columnProperties?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageColumnProperties"][]
        | null;
      image?: components["schemas"]["GoogleCloudDialogflowV2IntentMessageImage"];
      rows?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageTableCardRow"][]
        | null;
      subtitle?: string | null;
      title?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageTableCardCell: {
      text?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageTableCardRow: {
      cells?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessageTableCardCell"][]
        | null;
      dividerAfter?: boolean | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentMessageText: {
      text?: string[] | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentParameter: {
      defaultValue?: string | null;
      displayName?: string | null;
      entityTypeDisplayName?: string | null;
      isList?: boolean | null;
      mandatory?: boolean | null;
      name?: string | null;
      prompts?: string[] | null;
      value?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentTrainingPhrase: {
      name?: string | null;
      parts?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentTrainingPhrasePart"][]
        | null;
      timesAddedCount?: number | null;
      type?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2IntentTrainingPhrasePart: {
      alias?: string | null;
      entityType?: string | null;
      text?: string | null;
      userDefined?: boolean | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2OriginalDetectIntentRequest: {
      payload?: { [key: string]: any } | null;
      source?: string | null;
      version?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2QueryResult: {
      action?: string | null;
      allRequiredParamsPresent?: boolean | null;
      diagnosticInfo?: { [key: string]: any } | null;
      fulfillmentMessages?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessage"][]
        | null;
      fulfillmentText?: string | null;
      intent?: components["schemas"]["GoogleCloudDialogflowV2Intent"];
      intentDetectionConfidence?: number | null;
      languageCode?: string | null;
      outputContexts?:
        | components["schemas"]["GoogleCloudDialogflowV2Context"][]
        | null;
      parameters?: { [key: string]: any } | null;
      queryText?: string | null;
      sentimentAnalysisResult?: components["schemas"]["GoogleCloudDialogflowV2SentimentAnalysisResult"];
      speechRecognitionConfidence?: number | null;
      webhookPayload?: { [key: string]: any } | null;
      webhookSource?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2Sentiment: {
      magnitude?: number | null;
      score?: number | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2SentimentAnalysisResult: {
      queryTextSentiment?: components["schemas"]["GoogleCloudDialogflowV2Sentiment"];
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2SessionEntityType: {
      entities?:
        | components["schemas"]["GoogleCloudDialogflowV2EntityTypeEntity"][]
        | null;
      entityOverrideMode?: string | null;
      name?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2WebhookRequest: {
      originalDetectIntentRequest?: components["schemas"]["GoogleCloudDialogflowV2OriginalDetectIntentRequest"];
      queryResult?: components["schemas"]["GoogleCloudDialogflowV2QueryResult"];
      responseId?: string | null;
      session?: string | null;
      eTag?: string | null;
    };
    GoogleCloudDialogflowV2WebhookResponse: {
      followupEventInput?: components["schemas"]["GoogleCloudDialogflowV2EventInput"];
      fulfillmentMessages?:
        | components["schemas"]["GoogleCloudDialogflowV2IntentMessage"][]
        | null;
      fulfillmentText?: string | null;
      outputContexts?:
        | components["schemas"]["GoogleCloudDialogflowV2Context"][]
        | null;
      payload?: { [key: string]: any } | null;
      sessionEntityTypes?:
        | components["schemas"]["GoogleCloudDialogflowV2SessionEntityType"][]
        | null;
      source?: string | null;
      eTag?: string | null;
    };
    Images: {
      small?: string | null;
      medium?: string | null;
      large?: string | null;
      extraLarge?: string | null;
    };
    Income: {
      amount?: number;
      currency?: components["schemas"]["Currency"];
      description?: string | null;
      source?: components["schemas"]["IncomeSource"];
      type?: components["schemas"]["IncomeType"];
      timestamp?: string;
    };
    IncomeBinding: {
      amount?: number;
      currencyId?: string | null;
      description?: string | null;
      sourceId?: string | null;
      typeId?: string | null;
      date?: string;
    };
    IncomePagedView: {
      count?: number;
      items?: components["schemas"]["Income"][] | null;
    };
    IncomeSort: "Date" | "Amount";
    IncomeSource: {
      id?: string | null;
      name?: string | null;
    };
    IncomeType: {
      id?: string | null;
      name?: string | null;
    };
    Int32GroupedByMonth: {
      data?: number;
      month?: number;
      year?: number;
    };
    Location: {
      latitude?: number;
      longitude?: number;
    };
    Manufacturer: {
      name?: string | null;
    };
    Movie: {
      timestamp?: string;
      myRating?: number;
      rating?: number;
      runtime?: number;
      year?: number;
      imdbId?: string | null;
      title?: string | null;
    };
    MoviePagedView: {
      count?: number;
      items?: components["schemas"]["Movie"][] | null;
    };
    MovieSort:
      | "Watched"
      | "Rating"
      | "Runtime"
      | "MyRating"
      | "MyRatingDifference"
      | "Title"
      | "Year";
    PasswordSetBinding: {
      password?: string | null;
    };
    PaymentType: {
      id?: string | null;
      name?: string | null;
    };
    Poi: {
      id?: string | null;
      name?: string | null;
      address?: string | null;
      category?: components["schemas"]["PoiCategory"];
      location?: components["schemas"]["Location"];
    };
    PoiBinding: {
      address?: string | null;
      name?: string | null;
      poiCategoryId?: string | null;
      latitude?: number;
      longitude?: number;
    };
    PoiCategory: {
      id?: string | null;
      name?: string | null;
    };
    PoiPagedView: {
      count?: number;
      items?: components["schemas"]["Poi"][] | null;
    };
    RideBinding: {
      destinationCityId?: string | null;
      destinationPoiId?: string | null;
      originCityId?: string | null;
      originPoiId?: string | null;
      arrival?: string;
      departure?: string;
      typeId?: string | null;
    };
    Role: {
      id?: string | null;
      name?: string | null;
    };
    StringDecimalKeyValuePair: {
      key?: string | null;
      value?: number;
    };
    StringInt32KeyValuePair: {
      key?: string | null;
      value?: number;
    };
    TimeByDay: {
      day?: string;
      seconds?: number;
      sessions?: number;
    };
    Track: {
      artist?: components["schemas"]["Artist"];
      images?: components["schemas"]["Images"];
      title?: string | null;
      timestamp?: string | null;
    };
    Tracking: {
      accuracy?: number | null;
      altitude?: number | null;
      latitude?: number;
      longitude?: number;
      lat?: number;
      lng?: number;
      speed?: number | null;
      timestamp?: string;
    };
    TrackingBinding: {
      accuracy?: number | null;
      altitude?: number | null;
      latitude?: number;
      longitude?: number;
      timestamp?: string;
      speed?: number | null;
    };
    TransferWiseTransferEvent: {
      resourceId?: number;
      message?: string | null;
    };
    Trip: {
      id?: string | null;
      name?: string | null;
      timestampEnd?: string;
      timestampStart?: string;
      distance?: number;
      countries?: components["schemas"]["Country"][] | null;
      cities?: components["schemas"]["City"][] | null;
      files?: components["schemas"]["File"][] | null;
      expenses?: components["schemas"]["Expense"][] | null;
      pois?: components["schemas"]["Poi"][] | null;
      totalSpent?: number;
    };
    TripBinding: {
      name?: string | null;
      timestampEnd?: string;
      timestampStart?: string;
      cityIds?: string[] | null;
    };
    TripPagedView: {
      count?: number;
      items?: components["schemas"]["Trip"][] | null;
    };
    TripSort: "Date" | "Duration";
    User: {
      defaultCurrency?: components["schemas"]["Currency"];
      firstName?: string | null;
      lastName?: string | null;
      email?: string | null;
      username?: string | null;
      roles?: components["schemas"]["Role"][] | null;
      modules?: string[] | null;
    };
    Vendor: {
      id?: string | null;
      name?: string | null;
      city?: components["schemas"]["City"];
    };
    VendorPagedView: {
      count?: number;
      items?: components["schemas"]["Vendor"][] | null;
    };
    Web: {
      id?: string | null;
      name?: string | null;
    };
    WebTime: {
      seconds?: number;
      webId?: string | null;
    };
  };
}

export interface operations {}

export interface external {}
